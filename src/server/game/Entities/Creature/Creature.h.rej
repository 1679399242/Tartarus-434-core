***************
*** 663,668 ****
          void FocusTarget(Spell const* focusSpell, WorldObject const* target);
          void ReleaseFocus(Spell const* focusSpell);
  
      protected:
          bool CreateFromProto(uint32 guidlow, uint32 entry, CreatureData const* data = nullptr, uint32 vehId = 0);
          bool InitEntry(uint32 entry, CreatureData const* data = nullptr);
--- 670,745 ----
          void FocusTarget(Spell const* focusSpell, WorldObject const* target);
          void ReleaseFocus(Spell const* focusSpell);
  
+         //Bot commands
+         bool LoadBotCreatureFromDB(uint32 guid, Map* map, bool addToMap = true);
+         Player* GetBotOwner() const;
+         void SetBotOwner(Player* newowner);
+         Creature* GetCreatureOwner() const { return m_creature_owner; }
+         void SetCreatureOwner(Creature* newCreOwner) { m_creature_owner = newCreOwner; }
+         Creature* GetBotsPet() const { return m_bots_pet; }
+         void SetBotsPetDied();
+         void SetBotsPet(Creature* newpet) { /*ASSERT (!m_bots_pet);*/ m_bots_pet = newpet; }
+         bool IsNPCBot() const;
+         bool IsFreeBot() const;
+         void SetIAmABot(bool bot = true);
+         bool GetIAmABot() const;
+         bool GetIAmABotsPet() const;
+         uint8 GetBotClass() const;
+         uint8 GetBotRoles() const;
+         bot_ai* GetBotAI() const { return bot_AI; }
+         bot_minion_ai* GetBotMinionAI() const;
+         bot_pet_ai* GetBotPetAI() const;
+         void SetBotAI(bot_ai* ai) { bot_AI = ai; }
+         void SetBotCommandState(CommandStates st, bool force = false);
+         CommandStates GetBotCommandState() const;
+         void ApplyBotDamageMultiplierMelee(uint32& damage, CalcDamageInfo& damageinfo) const;
+         void ApplyBotDamageMultiplierMelee(int32& damage, SpellNonMeleeDamage& damageinfo, SpellInfo const* spellInfo, WeaponAttackType attackType, bool& crit) const;
+         void ApplyBotDamageMultiplierSpell(int32& damage, SpellNonMeleeDamage& damageinfo, SpellInfo const* spellInfo, WeaponAttackType attackType, bool& crit) const;
+         void ApplyBotDamageMultiplierHeal(Unit const* victim, float& heal, SpellInfo const* spellInfo, DamageEffectType damagetype, uint32 stack) const;
+         void ApplyBotCritMultiplierAll(Unit const* victim, float& crit_chance, SpellInfo const* spellInfo, SpellSchoolMask schoolMask, WeaponAttackType attackType) const;
+         void ApplyCreatureSpellCostMods(SpellInfo const* spellInfo, int32& cost) const;
+         void ApplyCreatureSpellCastTimeMods(SpellInfo const* spellInfo, int32& casttime) const;
+         void SetBotShouldUpdateStats();
+         void OnBotSummon(Creature* summon);
+         void OnBotDespawn(Creature* summon);
+         void SetCanUpdate(bool can) { m_canUpdate = can; }
+         void KillEvents(bool force);
+         void BotStopMovement();
+         void ResetBotAI(uint8 resetType = 0);
+ 
+         bool CanParry() const;
+         bool CanDodge() const;
+         bool CanBlock() const;
+         bool CanCrit() const;
+         bool CanMiss() const;
+ 
+         float GetCreatureParryChance() const;
+         float GetCreatureDodgeChance() const;
+         float GetCreatureBlockChance() const;
+         float GetCreatureCritChance() const;
+         float GetCreatureMissChance() const;
+         float GetCreatureEvasion() const;
+         float GetCreatureArmorPenetrationCoef() const;
+         float GetCreatureDamageTakenMod() const;
+         uint32 GetCreatureExpertise() const;
+         uint32 GetCreatureSpellPenetration() const;
+         uint32 GetCreatureSpellPower() const;
+ 
+         bool IsCreatureImmuneToSpell(SpellInfo const* spellInfo) const;
+         bool IsTempBot() const;
+ 
+         MeleeHitOutcome BotRollMeleeOutcomeAgainst(Unit const* victim, WeaponAttackType attType) const;
+ 
+         void CastCreatureItemCombatSpell(Unit* target, WeaponAttackType attType, uint32 procVictim, uint32 procEx, Spell const* spell = NULL);
+ 
+         void OnSpellGo(Spell const* spell);
+         void AddBotSpellCooldown(uint32 spellId, uint32 cooldown);
+ 
+         static bool IsBotCustomSpell(uint32 spellId);
+         //advanced
+         bool IsQuestBot() const;
+         //End Bot commands
+ 
      protected:
          bool CreateFromProto(uint32 guidlow, uint32 entry, CreatureData const* data = nullptr, uint32 vehId = 0);
          bool InitEntry(uint32 entry, CreatureData const* data = nullptr);
