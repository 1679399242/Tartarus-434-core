***************
*** 253,258 ****
  
      _oldFactionId = 0;
      _isWalkingBeforeCharm = false;
  }
  
  ////////////////////////////////////////////////////////////
--- 253,265 ----
  
      _oldFactionId = 0;
      _isWalkingBeforeCharm = false;
+ 
+     //npcbot
+     _damageInfo.target = NULL;
+     _delayedTargetGuid = 0;
+     _swingDelayTimer = 0;
+     _swingLanded = true;
+     //end npcbot
  }
  
  ////////////////////////////////////////////////////////////
***************
*** 832,837 ****
          return;
      }
  
      /// @todo this is a workaround - not needed anymore, but required for some scripts :(
      if (!originalCaster && triggeredByAura)
          originalCaster = triggeredByAura->GetCasterGUID();
--- 868,882 ----
          return;
      }
  
+     //npcbot
+     if (Creature::IsBotCustomSpell(spellInfo->Id) && !(ToCreature() && ToCreature()->GetBotAI()))
+     {
+         TC_LOG_ERROR("entities.unit", "CastSpell: NpcBot system custom spell %u by caster: %s %u), aborted. Please report",
+             spellInfo->Id, (GetTypeId() == TYPEID_PLAYER ? "player (GUID:" : "creature (Entry:"), (GetTypeId() == TYPEID_PLAYER ? GetGUIDLow() : GetEntry()));
+         return;
+     }
+     //end npcbot
+ 
      /// @todo this is a workaround - not needed anymore, but required for some scripts :(
      if (!originalCaster && triggeredByAura)
          originalCaster = triggeredByAura->GetCasterGUID();
***************
*** 986,991 ****
              case SPELL_DAMAGE_CLASS_RANGED:
              case SPELL_DAMAGE_CLASS_MELEE:
              {
                  // Physical Damage
                  if (damageSchoolMask & SPELL_SCHOOL_MASK_NORMAL)
                  {
--- 1031,1042 ----
              case SPELL_DAMAGE_CLASS_RANGED:
              case SPELL_DAMAGE_CLASS_MELEE:
              {
+                 //Npcbot mod: apply bot damage mods
+                 if (Creature* bot = ToCreature())
+                     if (bot->GetIAmABot() || bot->GetIAmABotsPet())
+                         bot->ApplyBotDamageMultiplierMelee(damage, *damageInfo, spellInfo, attackType, crit);
+                 // End NpcBot
+ 
                  // Physical Damage
                  if (damageSchoolMask & SPELL_SCHOOL_MASK_NORMAL)
                  {
***************
*** 1043,1048 ****
              case SPELL_DAMAGE_CLASS_NONE:
              case SPELL_DAMAGE_CLASS_MAGIC:
              {
                  // If crit add critical bonus
                  if (crit)
                  {
--- 1094,1105 ----
              case SPELL_DAMAGE_CLASS_NONE:
              case SPELL_DAMAGE_CLASS_MAGIC:
              {
+                 //Npcbot mod: apply bot damage mods
+                 if (Creature* bot = ToCreature())
+                     if (bot->GetIAmABot() || bot->GetIAmABotsPet())
+                         bot->ApplyBotDamageMultiplierSpell(damage, *damageInfo, spellInfo, attackType, crit);
+                 // End NpcBot
+ 
                  // If crit add critical bonus
                  if (crit)
                  {
***************
*** 1574,1579 ****
  
      if (Player const* player = ToPlayer())
          baseVictimResistance -= player->GetSpellPenetrationItemMod();
  
      // Resistance can't be lower then 0
      int32 victimResistance = std::max<int32>(baseVictimResistance, 0);
--- 1654,1663 ----
  
      if (Player const* player = ToPlayer())
          baseVictimResistance -= player->GetSpellPenetrationItemMod();
+     //npcbot - spell penetration for bots
+     else if (ToCreature()->GetBotAI())
+         baseVictimResistance -= ToCreature()->GetCreatureSpellPenetration();
+     //end npcbot
  
      // Resistance can't be lower then 0
      int32 victimResistance = std::max<int32>(baseVictimResistance, 0);
***************
*** 6042,6047 ****
                      // Check cooldown of heal spell cooldown
                      if (GetTypeId() == TYPEID_PLAYER && !ToPlayer()->HasSpellCooldown(34299))
                          CastCustomSpell(this, 60889, &basepoints1, 0, 0, true, 0, triggeredByAura);
                      break;
                  }
                  // Healing Touch (Dreamwalker Raiment set)
--- 6254,6265 ----
                      // Check cooldown of heal spell cooldown
                      if (GetTypeId() == TYPEID_PLAYER && !ToPlayer()->HasSpellCooldown(34299))
                          CastCustomSpell(this, 60889, &basepoints1, 0, 0, true, 0, triggeredByAura);
+ 
+                     //npcbot - proc for bot
+                     if (GetTypeId() == TYPEID_UNIT && ToCreature()->GetBotAI() && !ToCreature()->HasSpellCooldown(34299))
+                         CastCustomSpell(this, 60889, &basepoints1, 0, 0, true, 0, triggeredByAura);
+                     //end npcbot
+ 
                      break;
                  }
                  // Healing Touch (Dreamwalker Raiment set)
***************
*** 8887,8892 ****
      //    ToCreature()->SetCombatStartPosition(GetPositionX(), GetPositionY(), GetPositionZ());
  
      if (GetTypeId() == TYPEID_UNIT && !ToCreature()->IsPet())
      {
          // should not let player enter combat by right clicking target - doesn't helps
          SetInCombatWith(victim);
--- 9130,9138 ----
      //    ToCreature()->SetCombatStartPosition(GetPositionX(), GetPositionY(), GetPositionZ());
  
      if (GetTypeId() == TYPEID_UNIT && !ToCreature()->IsPet())
+     //npcbot - not for npcbots either
+     if (!ToCreature()->GetBotAI())
+     //end npcbot
      {
          // should not let player enter combat by right clicking target - doesn't helps
          SetInCombatWith(victim);
***************
*** 9579,9590 ****
      if (GetTypeId() == TYPEID_PLAYER)
          ToPlayer()->StopCastingCharm();
  
      while (!m_Controlled.empty())
      {
          Unit* target = *m_Controlled.begin();
          m_Controlled.erase(m_Controlled.begin());
          if (target->GetCharmerGUID() == GetGUID())
              target->RemoveCharmAuras();
          else if (target->GetOwnerGUID() == GetGUID() && target->IsSummon())
              target->ToTempSummon()->UnSummon();
          else
--- 9831,9855 ----
      if (GetTypeId() == TYPEID_PLAYER)
          ToPlayer()->StopCastingCharm();
  
+     //npcbot - store bots for recontroll; bots are to be removed manually
+     std::list<Unit*> nBots;
+     for (Unit::ControlList::iterator itr = m_Controlled.begin(); itr != m_Controlled.end(); ++itr)
+         if ((*itr)->GetTypeId() == TYPEID_UNIT && (*itr)->ToCreature()->GetBotAI())
+             nBots.push_back(*itr);
+     //end npcbot
+ 
      while (!m_Controlled.empty())
      {
          Unit* target = *m_Controlled.begin();
          m_Controlled.erase(m_Controlled.begin());
          if (target->GetCharmerGUID() == GetGUID())
              target->RemoveCharmAuras();
+         //npcbot - debug info
+         else if (target->GetTypeId() == TYPEID_UNIT && target->ToCreature()->GetBotAI())
+         {
+             //TC_LOG_ERROR("entities.unit", "RemoveAllControlled(): Unit %u removing bot %s (%u)", GetGUIDLow(), target->GetName().c_str(), target->GetEntry());
+         }
+         //end npcbot
          else if (target->GetOwnerGUID() == GetGUID() && target->IsSummon())
              target->ToTempSummon()->UnSummon();
          else
***************
*** 9596,9601 ****
          TC_LOG_FATAL("entities.unit", "Unit %u is not able to release its minion " UI64FMTD, GetEntry(), GetMinionGUID());
      if (GetCharmGUID())
          TC_LOG_FATAL("entities.unit", "Unit %u is not able to release its charm " UI64FMTD, GetEntry(), GetCharmGUID());
  }
  
  bool Unit::isPossessedByPlayer() const
--- 9861,9874 ----
          TC_LOG_FATAL("entities.unit", "Unit %u is not able to release its minion " UI64FMTD, GetEntry(), GetMinionGUID());
      if (GetCharmGUID())
          TC_LOG_FATAL("entities.unit", "Unit %u is not able to release its charm " UI64FMTD, GetEntry(), GetCharmGUID());
+ 
+     //npcbot - restore controlled bots
+     if (nBots.empty())
+         return;
+ 
+     for (std::list<Unit*>::const_iterator itr = nBots.begin(); itr != nBots.end(); ++itr)
+         m_Controlled.insert(*itr);
+     //end npcbot
  }
  
  bool Unit::isPossessedByPlayer() const
***************
*** 11472,11477 ****
  {
      int32 DoneAdvertisedBenefit = 0;
  
      AuraEffectList const& mDamageDone = GetAuraEffectsByType(SPELL_AURA_MOD_DAMAGE_DONE);
      for (AuraEffectList::const_iterator i = mDamageDone.begin(); i != mDamageDone.end(); ++i)
          if (((*i)->GetMiscValue() & schoolMask) != 0 &&
--- 11750,11760 ----
  {
      int32 DoneAdvertisedBenefit = 0;
  
+     //npcbot: apply bot spellpower
+     if (schoolMask && !(schoolMask & SPELL_SCHOOL_MASK_NORMAL) && GetTypeId() == TYPEID_UNIT && ToCreature()->GetBotAI())
+         DoneAdvertisedBenefit += ToCreature()->GetCreatureSpellPower();
+     //end npcbot
+ 
      AuraEffectList const& mDamageDone = GetAuraEffectsByType(SPELL_AURA_MOD_DAMAGE_DONE);
      for (AuraEffectList::const_iterator i = mDamageDone.begin(); i != mDamageDone.end(); ++i)
          if (((*i)->GetMiscValue() & schoolMask) != 0 &&
***************
*** 11529,11534 ****
      //! Mobs can't crit with spells. Player Totems can
      //! Fire Elemental (from totem) can too - but this part is a hack and needs more research
      if (IS_CRE_OR_VEH_GUID(GetGUID()) && !(IsTotem() && IS_PLAYER_GUID(GetOwnerGUID())) && GetEntry() != 15438)
          return 0.0f;
  
      // not critting spell
--- 11812,11820 ----
      //! Mobs can't crit with spells. Player Totems can
      //! Fire Elemental (from totem) can too - but this part is a hack and needs more research
      if (IS_CRE_OR_VEH_GUID(GetGUID()) && !(IsTotem() && IS_PLAYER_GUID(GetOwnerGUID())) && GetEntry() != 15438)
+         //npcbot - allow bots to crit
+         if (!ToCreature()->GetBotAI())
+         //end npcbot
          return 0.0f;
  
      // not critting spell
***************
*** 11716,11721 ****
      if (Player* modOwner = GetSpellModOwner())
          modOwner->ApplySpellMod(spellProto->Id, SPELLMOD_CRITICAL_CHANCE, crit_chance);
  
      return crit_chance > 0.0f ? crit_chance : 0.0f;
  }
  
--- 12002,12013 ----
      if (Player* modOwner = GetSpellModOwner())
          modOwner->ApplySpellMod(spellProto->Id, SPELLMOD_CRITICAL_CHANCE, crit_chance);
  
+     //npcbot - apply bot spell crit mods
+     if (GetTypeId() == TYPEID_UNIT && ToCreature()->GetBotAI())
+         ToCreature()->ApplyBotCritMultiplierAll(victim, crit_chance, spellProto, schoolMask, attackType);
+     //end npcbot
+  
+ 
      return crit_chance > 0.0f ? crit_chance : 0.0f;
  }
  
***************
*** 12680,12685 ****
      if (PvP)
          m_CombatTimer = 5000;
  
      if (IsInCombat() || HasUnitState(UNIT_STATE_EVADE))
          return;
  
--- 12992,13003 ----
      if (PvP)
          m_CombatTimer = 5000;
  
+     ////npcbot - if combat with npcbot or its pet set extended timer
+     //if (PvP &&((GetTypeId() == TYPEID_UNIT && ToCreature()->IsFreeBot()) ||
+     //    (enemy->GetTypeId() == TYPEID_UNIT && enemy->ToCreature()->IsFreeBot())))
+     //    m_CombatTimer += 5000;
+     ////end npcbot
+ 
      if (IsInCombat() || HasUnitState(UNIT_STATE_EVADE))
          return;
  
***************
*** 15010,15015 ****
  {
      // Not apply this to creature cast spells with casttime == 0
      if (CastingTime == 0 && GetTypeId() == TYPEID_UNIT && !ToCreature()->IsPet())
          return 3500;
  
      if (CastingTime > 7000) CastingTime = 7000;
--- 15375,15383 ----
  {
      // Not apply this to creature cast spells with casttime == 0
      if (CastingTime == 0 && GetTypeId() == TYPEID_UNIT && !ToCreature()->IsPet())
+         //npcbot - skip bots
+         if (!ToCreature()->GetBotAI())
+         //endnpcbot
          return 3500;
  
      if (CastingTime > 7000) CastingTime = 7000;
***************
*** 17276,17281 ****
      //calculate miss chance
      float missChance = victim->GetUnitMissChance(attType);
  
      if (!spellId && haveOffhandWeapon())
          missChance += 19;
  
--- 17647,17667 ----
      //calculate miss chance
      float missChance = victim->GetUnitMissChance(attType);
  
+     //npcbot - custom miss chance instead of bunch of auras, extra miss chance against bots
+     //bot can have extra miss chance for attackers
+     //but if attacker is also a bot and cannot miss then return this extra miss chance
+     float evasion = 0.0f;
+ 
+     if (victim->GetTypeId() == TYPEID_UNIT && victim->ToCreature()->GetBotAI())
+         evasion = victim->ToCreature()->GetCreatureEvasion();
+     if (GetTypeId() == TYPEID_UNIT && !ToCreature()->CanMiss())
+         return evasion;
+     if (GetTypeId() == TYPEID_UNIT && ToCreature()->GetBotAI())
+         missChance += ToCreature()->GetCreatureMissChance();
+ 
+     missChance += evasion;
+     //end npcbot
+ 
      if (!spellId && haveOffhandWeapon())
          missChance += 19;
  
